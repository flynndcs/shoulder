version: "3.9"
services:
  shoulder:
    container_name: shoulder
    image: flynn/shoulder
    build:
      dockerfile: docker/Dockerfile
    environment:
      AMQP_CONN_STRING: "amqp://guest:guest@rabbitmq:5672/" 
      POSTGRES_CONN_STRING: "host=postgres user=postgres password=postgres dbname=postgres port=5432 sslmode=disable"
      EXCHANGE_NAME: "shoulder"
    ports: 
      - 8080:8080
    networks:
      - shoulder
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - shoulder
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - shoulder 

networks:
  shoulder:
    driver: bridge